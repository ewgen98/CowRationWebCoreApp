// <auto-generated />
using CowRationWebApplication;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CowRationWebApplication.Migrations
{
    [DbContext(typeof(CowRationContext))]
    [Migration("20181111170656_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CowRationWebApplication.CatalogIndexNutritional", b =>
                {
                    b.Property<int>("IdIndex")
                        .HasColumnName("Id_index");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("IdIndex");

                    b.ToTable("CatalogIndexNutritional");
                });

            modelBuilder.Entity("CowRationWebApplication.Expenses", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Article")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("CowRationWebApplication.Faza", b =>
                {
                    b.Property<int>("IdFaza")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_faza");

                    b.Property<string>("Faza1")
                        .IsRequired()
                        .HasColumnName("Faza")
                        .HasColumnType("nchar(20)");

                    b.HasKey("IdFaza");

                    b.ToTable("Faza");
                });

            modelBuilder.Entity("CowRationWebApplication.FnutritionalCharacteristics", b =>
                {
                    b.Property<int>("IdTask")
                        .HasColumnName("Id_task");

                    b.Property<int>("IdKorm")
                        .HasColumnName("Id_korm");

                    b.Property<int>("IdIndex")
                        .HasColumnName("Id_index");

                    b.Property<double?>("Fvalue")
                        .HasColumnName("FValue");

                    b.Property<int>("IdCategory")
                        .HasColumnName("Id_category");

                    b.HasKey("IdTask", "IdKorm", "IdIndex");

                    b.HasIndex("IdCategory");

                    b.HasIndex("IdIndex");

                    b.HasIndex("IdKorm");

                    b.ToTable("FNutritionalCharacteristics");
                });

            modelBuilder.Entity("CowRationWebApplication.Korm", b =>
                {
                    b.Property<int>("IdKorm")
                        .HasColumnName("Id_korm");

                    b.Property<int>("KormCategory")
                        .HasColumnName("Korm_category");

                    b.Property<string>("NameKorm")
                        .IsRequired()
                        .HasColumnName("Name_korm")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("PriceKorm")
                        .HasColumnName("Price_korm")
                        .HasColumnType("decimal(9, 2)");

                    b.Property<string>("Unit")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Voluminousness")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.HasKey("IdKorm");

                    b.ToTable("Korm");
                });

            modelBuilder.Entity("CowRationWebApplication.Milk", b =>
                {
                    b.Property<int>("Id");

                    b.Property<double>("MilkQuantity");

                    b.HasKey("Id");

                    b.ToTable("Milk");
                });

            modelBuilder.Entity("CowRationWebApplication.NutritionalCategories", b =>
                {
                    b.Property<int>("IdCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_category");

                    b.Property<decimal?>("FatContent")
                        .HasColumnName("Fat_content")
                        .HasColumnType("decimal(3, 2)");

                    b.Property<int>("IdFaza")
                        .HasColumnName("Id_faza");

                    b.Property<decimal?>("Protein")
                        .HasColumnType("decimal(3, 2)");

                    b.Property<int?>("VolumeOfMilk");

                    b.Property<int>("Weight");

                    b.HasKey("IdCategory");

                    b.HasIndex("IdFaza");

                    b.ToTable("NutritionalCategories");
                });

            modelBuilder.Entity("CowRationWebApplication.Ration", b =>
                {
                    b.Property<int>("IdRation")
                        .HasColumnName("Id_ration");

                    b.Property<int>("IdKorm")
                        .HasColumnName("Id_korm");

                    b.Property<decimal?>("Heft")
                        .HasColumnType("decimal(10, 3)");

                    b.Property<int>("IdTask")
                        .HasColumnName("Id_task");

                    b.HasKey("IdRation", "IdKorm");

                    b.HasIndex("IdKorm");

                    b.HasIndex("IdTask");

                    b.ToTable("Ration");
                });

            modelBuilder.Entity("CowRationWebApplication.RationCow", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("KormId");

                    b.Property<int>("MilkId");

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.HasIndex("KormId");

                    b.HasIndex("MilkId");

                    b.ToTable("RationCow");
                });

            modelBuilder.Entity("CowRationWebApplication.Storage", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int?>("KormId");

                    b.Property<double?>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("KormId");

                    b.ToTable("Storage");
                });

            modelBuilder.Entity("CowRationWebApplication.Task", b =>
                {
                    b.Property<int>("IdTask")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_task");

                    b.Property<string>("Task1")
                        .IsRequired()
                        .HasColumnName("Task")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IdTask");

                    b.HasIndex("IdTask", "Task1")
                        .HasName("IDZad");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("CowRationWebApplication.FnutritionalCharacteristics", b =>
                {
                    b.HasOne("CowRationWebApplication.NutritionalCategories", "IdCategoryNavigation")
                        .WithMany("FnutritionalCharacteristics")
                        .HasForeignKey("IdCategory")
                        .HasConstraintName("FK_FNutritionalCharacteristics_NutritionalCategories");

                    b.HasOne("CowRationWebApplication.CatalogIndexNutritional", "IdIndexNavigation")
                        .WithMany("FnutritionalCharacteristics")
                        .HasForeignKey("IdIndex")
                        .HasConstraintName("FK_FNutritionalCharacteristics_CatalogIndexNutritional");

                    b.HasOne("CowRationWebApplication.Korm", "IdKormNavigation")
                        .WithMany("FnutritionalCharacteristics")
                        .HasForeignKey("IdKorm")
                        .HasConstraintName("FK_FNutritionalCharacteristics_Korm1");

                    b.HasOne("CowRationWebApplication.Task", "IdTaskNavigation")
                        .WithMany("FnutritionalCharacteristics")
                        .HasForeignKey("IdTask")
                        .HasConstraintName("FK_FNutritionalCharacteristics_Task");
                });

            modelBuilder.Entity("CowRationWebApplication.NutritionalCategories", b =>
                {
                    b.HasOne("CowRationWebApplication.Faza", "IdFazaNavigation")
                        .WithMany("NutritionalCategories")
                        .HasForeignKey("IdFaza")
                        .HasConstraintName("FK_NutritionalCategories_Faza");
                });

            modelBuilder.Entity("CowRationWebApplication.Ration", b =>
                {
                    b.HasOne("CowRationWebApplication.Korm", "IdKormNavigation")
                        .WithMany("Ration")
                        .HasForeignKey("IdKorm")
                        .HasConstraintName("FK_Ration_Korm");

                    b.HasOne("CowRationWebApplication.Task", "IdTaskNavigation")
                        .WithMany("Ration")
                        .HasForeignKey("IdTask")
                        .HasConstraintName("FK_Ration_Task");
                });

            modelBuilder.Entity("CowRationWebApplication.RationCow", b =>
                {
                    b.HasOne("CowRationWebApplication.Korm", "Korm")
                        .WithMany("RationCow")
                        .HasForeignKey("KormId")
                        .HasConstraintName("FK_RationCow_Korm");

                    b.HasOne("CowRationWebApplication.Milk", "Milk")
                        .WithMany("RationCow")
                        .HasForeignKey("MilkId")
                        .HasConstraintName("FK_RationCow_Milk");
                });

            modelBuilder.Entity("CowRationWebApplication.Storage", b =>
                {
                    b.HasOne("CowRationWebApplication.Korm", "Korm")
                        .WithMany("Storage")
                        .HasForeignKey("KormId")
                        .HasConstraintName("FK_Storage_Korm");
                });
#pragma warning restore 612, 618
        }
    }
}
